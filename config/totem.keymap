//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
           &kp Q  &kp W  &kp E             &kp R  &kp T                   &kp Y        &kp U            &kp I          &kp O    &kp P
           &kp A  &kp S  &kp D             &kp F  &kp G                   &kp H        &kp J            &kp K          &kp L    &kp SEMI
&kp LCTRL  &kp Z  &kp X  &kp C             &kp V  &kp B                   &kp N        &kp M            &kp COMMA      &kp DOT  &kp FSLH  &kp APOS
                         &kp LEFT_CONTROL  &mo 3  &mt LEFT_SHIFT SPACE    &lt 1 SPACE  &kp RIGHT_SHIFT  &kp RIGHT_ALT
            >;
        };

        nav_num {
            bindings = <
         &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3       &kp NUMBER_4        &kp N5                  &kp NUMBER_6  &kp N7           &kp N8            &kp N9             &kp N0
         &kp PAGE_UP    &kp PAGE_UP    &kp LS(LC(COMMA))  &kp LS(LC(PERIOD))  &kp LA(RIGHT)           &kp MINUS     &kp EQUAL        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON
&kp TAB  &kp PAGE_DOWN  &kp PAGE_DOWN  &kp LC(C)          &kp LC(V)           &mkp MB1                &mkp MB2      &kp SQT          &kp COMMA         &kp PERIOD         &kp FSLH       &kp RETURN
                                       &kp LEFT_CONTROL   &kp LEFT_ALT        &mt LEFT_SHIFT SPACE    &kp SPACE     &kp PRINTSCREEN  &kp RIGHT_GUI
            >;
        };

        sym_func {
            bindings = <
                &bt BT_SEL 0  &kp LEFT      &kp UP_ARROW           &kp RIGHT_ARROW    &kp PAGE_UP      &kp PAGE_UP    &mmv MOVE_LEFT   &mmv MOVE_UP    &mmv MOVE_RIGHT  &kp F5
                &bt BT_SEL 1  &out OUT_BLE  &kp DOWN_ARROW         &kp RIGHT_BRACKET  &kp PAGE_DOWN    &kp PAGE_DOWN  &kp F7           &mmv MOVE_DOWN  &kp F9           &none
&kp LEFT_SHIFT  &bt BT_SEL 2  &out OUT_USB  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN   &none            &none          &kp F12          &kp F13         &kp F14          &kp F12  &kp F12
                                            &trans                 &trans             &mkp MB1         &mkp MB2       &kp RIGHT_SHIFT  &kp RIGHT_GUI
            >;
        };

        device {
            bindings = <
       &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none             &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
       &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_PLAY_PAUSE  &none    &none         &none         &none         &none         &none
&none  &none       &none                 &none                 &none             &none    &none         &none         &none         &none         &none         &bt BT_CLR
                                         &none                 &none             &none    &none         &none         &none
            >;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        device {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
